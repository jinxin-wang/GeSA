import os

configfile: "workflow/config/config.json"

if config["TARGET_INTERVAL"]!="":
    TARGET_INTERVAL_GATK = " -L " + config["TARGET_INTERVAL"]
    TARGET_INTERVAL_BQSR = TARGET_INTERVAL_GATK

else :
    TARGET_INTERVAL_GATK = ""
    TARGET_INTERVAL_BQSR = " -L 1 "

if config["MUTECT_INTERVAL_DIR"][-1] == '/':
    config["MUTECT_INTERVAL_DIR"] = config["MUTECT_INTERVAL_DIR"][:-1]

mutect_intervals, = glob_wildcards(config["MUTECT_INTERVAL_DIR"] + "/{interval}.bed")

## Collecting information on files to produce

SAMPLES = []

## Get all fastq
FASTQ_SAMPLES = glob_wildcards("DNA_samples/{name}.fastq.gz")

TSAMPLE = []
NSAMPLE = []

MUTECT2_SAMPLES = []
MUTECT2_FOR_PON_SAMPLES = []
FACETS_SAMPLES = []
CNV_FACETS_SAMPLES = []
ONCOTATOR_SAMPLES = []
ONCOTATOR_EXOM_SAMPLES = []
TUMOR_ONLY = False

if os.path.isfile("variant_call_list.tsv") :
    with open("variant_call_list.tsv",'r')  as SAMPLE_INPUT_LIST: 
        for line in SAMPLE_INPUT_LIST :
            tmp = line.strip().split('\t')
            if len(tmp)==2:
                tsample = tmp[0]
                nsample = tmp[1]
                TSAMPLE.append(tsample)
                NSAMPLE.append(nsample)
                FACETS_SAMPLES.append("facets/" + tsample + "_Vs_" + nsample + "_facets_cval500.pdf")
                CNV_FACETS_SAMPLES.append("cnv_facets/" + tsample + "_Vs_" + nsample + ".vcf.gz")
                ONCOTATOR_SAMPLES.append("oncotator_TvN_tsv_COSMIC/" + tsample + "_Vs_" + nsample + "_TvN_with_COSMIC.tsv")
                ONCOTATOR_EXOM_SAMPLES.append("oncotator_TvN_tsv_COSMIC_exom/" + tsample + "_Vs_" + nsample + "_TvN_with_COSMIC_exom.tsv")
                MUTECT2_SAMPLES.append("Mutect2_TvN/" + tsample + "_Vs_" + nsample + "_twicefiltered_TvN.vcf.gz")

else: 
    TUMOR_ONLY = True
        
rule all:
    input:
        expand('bam/{sample}.nodup.recal.bam', sample =  NSAMPLE + TSAMPLE),
        expand('fastq_QC_raw/{fastq_sample}_fastqc.html', fastq_sample = FASTQ_SAMPLES.name),
        expand('fastq_QC_clean/{fastq_sample}_fastqc.html', fastq_sample =  FASTQ_SAMPLES.name),
        expand(FACETS_SAMPLES),
        expand(CNV_FACETS_SAMPLES),
        expand('mapping_QC/HsMetrics/{sample}_HsMetrics.tsv', sample = TSAMPLE + NSAMPLE),
        expand("mapping_QC/flagstat/{sample}_flagstat.txt",   sample = TSAMPLE + NSAMPLE),
        expand("mapping_QC/mosdepth/{sample}.mosdepth.global.dist.txt", sample = TSAMPLE + NSAMPLE),
        expand("BQSR/{sample}_BQSR_report.pdf", sample = TSAMPLE + NSAMPLE),
        # expand("haplotype_caller/{sample}_germline_variants.vcf.gz", sample = NSAMPLE),
        expand("annovar/{sample}.avinput", sample = NSAMPLE + TSAMPLE ),
        expand(MUTECT2_SAMPLES),
        expand(ONCOTATOR_SAMPLES),
        expand(ONCOTATOR_EXOM_SAMPLES),
        expand(MUTECT2_FOR_PON_SAMPLES),

#### bam files ####
include: "rules/Fastp/main.smk"
include: "rules/Bam/main.smk"

#### Fast QC ####
include: "rules/Fastqc/fastqc.smk"

#### Facets ####
include: "rules/Facets/main.smk"
include: "rules/CNV_Facets/main.smk"

#### BQSR ####
include: "rules/BQSR/main.smk"

#### HaplotypeCaller ####
include: "rules/HaplotypeCaller/main.smk"

#### Mapping QC ####
include: "rules/HsMetrics/main.smk"
include: "rules/Msodepth/main.smk"
include: "rules/Flagstat/main.smk"

#### Mutect2 ####
include: "rules/Mutect2/Std/main.smk"
include: "rules/Mutect2/Pon/main.smk"
include: "rules/Mutect2/TumorOnly/main.smk"
include: "rules/Mutect2/TumorOnlyPon/main.smk"
