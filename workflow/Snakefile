## load json configuration file
print("[message] Loading configuration file")
configfile: "workflow/config/config.json"

include: "rules/init_pipeline.smk"

include: "rules/data/utils/gz.smk"
    
if config["sam2fastq"]:
    include: "rules/Sam2fq/sam2fq.smk"

######## clean fastq files with fastp ########
include: "rules/Fastp/fastp.smk"

######## Fast QC ########
include: "rules/Fastqc/fastqc.smk"

######## align single-end or paired-end DNA samples with bwa ########
include: "rules/Align/bwa.smk"

######## [GATK - BQSR] Base Quality Score Recalibration ########
## https://gatk.broadinstitute.org/hc/en-us/articles/360035890531-Base-Quality-Score-Recalibration-BQSR-
## remove duplicated readswith, then do BQSR
include: "rules/BQSR/BQSR.smk"

######## Facets ########
if config["do_cnvfacet"]:
    include: "rules/Facets/cnvfacets.smk"
    
if TUMOR_ONLY == False or NORMAL_ONLY == False : 
    include: "rules/Facets/facets.smk"

######## HaplotypeCaller and Annovar ########

## Call germline SNPs and indels via local re-assembly of haplotypes
include: "rules/HaplotypeCaller/haplotypeCaller.smk"

## Annovar on Haplotype caller, only to normal samples
include: "rules/Annovar/annovar.smk"

if NORMAL_ONLY == False : 
    ######## Mapping QC ########
    
    ## check mapping stats, with GATK CollectHsMetrics
    include: "rules/HsMetrics/hsMetrics.smk"
    
    ## check mapping metrics with samtools flagstat
    include: "rules/Flagstat/flagstat.smk"
    
    ######## Annotate on Mutect2 ########
    
    ## common rules for mutect2
    include: "rules/Mutect2/Common/collectSeqAM.smk"
    include: "rules/Mutect2/Common/estiContamination.smk"
    
    ## Tumor vs Normal mode
    if TUMOR_ONLY == False:
        include: "rules/Mutect2/Std/mutect2.smk"
        
        if config["samples"] == "human":
            include: "rules/Mutect2/Std/Split/oncotator.smk"
    
            if config["seq_type"] == "WGS":
                include: "rules/Mutect2/Std/Exom/oncotator.smk"
    
        elif config["samples"] == "mouse":
            include: "rules/Mutect2/Std/Annovar/annovar.smk"
        
        ## Tumor vs Normal with panel of normals (PON)
        include: "rules/Mutect2/Pon/mutect2.smk"
    
        if config["samples"] == "human":
            include: "rules/Mutect2/Pon/Split/oncotator.smk"
            
            if config["seq_type"] == "WGS":
                include: "rules/Mutect2/Pon/Exom/oncotator.smk"
    
    ## Tumor Only mode
    elif TUMOR_ONLY == True: 
        include: "rules/Mutect2/TumorOnly/mutect2.smk"
    
        if config["samples"] == "human":
            include: "rules/Mutect2/TumorOnly/Split/oncotator.smk"
    
            if config["seq_type"] == "WGS":
                include: "rules/Mutect2/TumorOnly/Exom/oncotator.smk"
        
        elif config["samples"] == "mouse":
            include: "rules/Mutect2/TumorOnly/Annovar/annovar.smk"
        
        ## Tumor Only with panel of normals (PON)
        include: "rules/Mutect2/TumorOnlyPon/mutect2.smk"
    
        if config["samples"] == "human":
            include: "rules/Mutect2/TumorOnlyPon/Split/oncotator.smk"
            
            if config["seq_type"] == "WGS":
                include: "rules/Mutect2/TumorOnlyPon/Exom/oncotator.smk"
    
## tag in snakemake log, please don't modify
onsuccess:
    print("[TAG] DNA routine analysis complete")

rule all:
    input:
        expand('fastq_QC_raw/{sample}_fastqc.html', sample = FASTQ),
        expand('fastq_QC_clean/{sample}_fastqc.html', sample =  FASTQ),
        expand('bam/{sample}.nodup.recal.bam', sample = TSAMPLE + NSAMPLE),
        expand("haplotype_caller_filtered/{sample}_germline_variants_filtered.vcf.gz", sample = NSAMPLE),
        expand("annovar/{sample}.%s_multianno.txt.gz"%config["annovar"][config["samples"]]["ref"], sample = NSAMPLE if config["samples"] == "human" else []),
        expand('mapping_QC/HsMetrics/{sample}_HsMetrics.tsv', sample = TSAMPLE + NSAMPLE if NORMAL_ONLY == False else []),
        expand("mapping_QC/flagstat/{sample}_flagstat.txt",   sample = TSAMPLE + NSAMPLE if NORMAL_ONLY == False else []),
        expand(ANNOVAR),
        expand(FACETS),
        expand(CNV_FACETS),
        expand(MUTECT2),
        expand(ONCOTATOR_MAF if config["do_oncotator"] == True else []),
        expand(ONCOTATOR_EXOM_MAF if config["do_oncotator"] == True else []),
        expand(ONCOTATOR_COSMIC if config["do_oncotator"] == True else []),
        expand(ONCOTATOR_EXOM_COSMIC if config["do_oncotator"] == True else []),
        
